name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get the repository name
        id: get_repo_name
        run: echo ::set-output name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}')
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: Setup php
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.3'
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Composer Install
        run: composer install --no-dev
      - name: Get yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn dependencies
        uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Yarn Install
        run: yarn install
      - name: Yarn Build
        run: yarn build
      - name: Create Zip File
        uses: thedoctor0/zip-release@master
        with:
          filename: '${{ steps.get_repo_name.outputs.REPOSITORY_NAME }}.zip'
          exclusions: '*.git*
            *.lock
            *.log
            .distignore
            .editorconfig
            .eslint*
            .phpunit.result.cache
            composer.json
            docker*
            gulp*
            package*
            phpcs.xml
            phpstan.neon
            phpunit.xml.dist
            README.md
            require-checker.config.json
            stylelint*
            tsconfig.json
            /assets/src/*
            /docker/*
            /node_modules/*
            /test/*
            /wordpress/*'
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.get_repo_name.outputs.REPOSITORY_NAME }}.zip
          name: Version ${{ steps.get_version.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
